<%- include('../adminpart/adminhead') %>

    <body>
        <style>
            .btn-custom {
                height: 38px;
                padding: 10px 20px;
                font-size: 16px;
                border: none;
                border-radius: 5px;
                cursor: pointer;
            }

            /* Ensuring button margin consistency */
            .btn-custom+.btn-custom {
                margin-left: 10px;
            }
        </style>
       <div class="container">
        <h2>Sales Report</h2>
        <div class="d-flex align-items-center my-5">
            <a href="/salesReport/download/xlsx?startDate=<%= Dates?.startDate1?.split('T')[0] %>&endDate=<%= Dates?.endDate2?.split('T')[0] %>">
                <button id="downloadExcel" class="btn btn-success btn-custom">
                    <i style="color: aliceblue;" class="fas fa-file-excel"></i> Download Excel
                </button>
            </a>
            <button id="downloadPdf" class="btn btn-danger btn-custom ms-3">
                <i class="fas fa-file-pdf"></i> Download PDF
            </button>
            <% if(Dates) { %>
            <form id="filtersForm" class="d-flex align-items-center mx-4">
                <label for="startDate" class="form-label me-2">From:</label>
                <input id="startDate" type="date" class="form-control me-2" value="<%= Dates.startDate1.split('T')[0] %>">
                <label for="endDate" class="form-label me-2">To:</label>
                <input id="endDate" type="date" class="form-control me-2" value="<%= Dates.endDate2.split('T')[0] %>">
                <button type="button" class="btn btn-primary btn-sm ms-3 btn-custom" id="applyFilters">Apply Filters</button>
                <a href="/removefilter" class="ms-3">
                    <button type="button" class="btn btn-primary btn-sm btn-custom">Remove Filters</button>
                </a>
            </form>
            <% } else { %>
            <form id="filtersForm" class="d-flex align-items-center mx-4">
                <label for="startDate" class="form-label me-2">From:</label>
                <input id="startDate" type="date" class="form-control me-2">
                <label for="endDate" class="form-label me-2">To:</label>
                <input id="endDate" type="date" class="form-control me-2">
                <button type="button" class="btn btn-primary btn-sm ms-3 btn-custom" id="applyFilters">Apply Filters</button>
                <a href="/removefilter" class="ms-3">
                    <button type="button" class="btn btn-primary btn-sm btn-custom">Remove Filters</button>
                </a>
            </form>
            <% } %>
            <select id="filterOption" class="ms-5"
                style="width: 100px; height: 40px; padding: 5px; font-size: 16px; border: 2px solid #ccc; border-radius: 5px;">
                <option value="month">Month</option>
                <option value="week">Week</option>
                <option value="year">Year</option>
            </select>
            <button id="filterBtn" class="btn btn-success ms-3 btn-custom">Filter</button>
        </div>
        <script>
            let filterBtn2 = document.getElementById('filterBtn')
        filterBtn.addEventListener('click', async (e) => {
          e.preventDefault();
          let filterOption = document.getElementById('filterOption').value;
          let formData = { filterOption };
          console.log(formData)
          let response = await fetch('/admin/salesReport/filter', {
            method: 'POST',
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(formData)
          });
          let result = await response.json();
      
          if (result.success) {
               window.location.reload(); 
          }
        });
          </script>
    </div>
    
    <tr>
        <td colspan="4" class="total-header">
          <strong style="color: red;" >Total Orders:</strong>
        </td>
        <td colspan="3" class="total-value">
          <%= Sreports.length %>
        </td>
      </tr>
      <tr>
        <td colspan="4" class="total-header">
          <strong style="color: red;" >Total Sales:</strong>
        </td>
        <td colspan="3" class="total-value">
          <% let totalSales = Sreports.reduce((total, sale) => total + sale.Total, 0); %>   $<%= totalSales %>
        </td>
      </tr>
      <tr>
        <td colspan="4" class="total-header">
          <strong style="color: red;" >Total Discount:</strong>
        </td>
        <td colspan="3" class="total-value">
          $<%= TotalDiscount %>
        </td>
      </tr>
      
     
        
     
    

        <table class="table">
            <thead>
                <tr>
                    <th>OrderID</th>
                    <th>Name</th>
                    <th>OrderDate</th>
                    <th>ProductNames</th>
                    <th> Quantity </th>
                    
                    
                    <th>OfferPercentage</th>
                    <th>ProductPrice</th>
                   
                    
                   
                    <th>CouponAmount</th>
                    <th>Total</th>
                    <th>PayMethod</th>
                    <th>Status</th>

                </tr>
            </thead>
            <tbody>
                <%for(i=0;i<Sreports.length;i++){%>
                    <tr>
                        <td>
                            <%=Sreports[i]?.OrderId%>
                        </td>
                        <td>
                            <%=Sreports[i]?.UserName%>
                        </td>
                        <td>
                            <%= new Date(Sreports[i]?.orderDate).toLocaleDateString('en-GB', { day: '2-digit' ,
                                month: '2-digit' , year: 'numeric' }).replace(/\//g, '-' ) %>
                        </td>
                        <td>
                            <%=Sreports[i].cartData.map((item) => item.productName).join(", ")%>
                        </td>
                        <td>
                            <%=Sreports[i].cartData.map((item) => item.productQuantity).join(", ")%>
                        </td>
                        
                        
                       
                        <td>
                            <%=Sreports[i].cartData.map((item) => item.productOfferPercentage).join("%, ")%>
                        </td>
                        <td>
                            <%=Sreports[i].cartData.map((item) => item.productprice).join("$, ")%>
                        </td>
                       
                        <td>
                            $  <%=Sreports[i]?.couponApplied%>
                        </td>
                        <td>
                           $<%=Sreports[i]?.Total%>
                        </td>
                        <td>
                            <%=Sreports[i]?.paymentType%>
                        </td>
                        <td>
                            <%=Sreports[i]?.orderStatus%>
                        </td>
                    </tr>
                    <%}%>
            </tbody>
        </table>
        </div>
        <nav aria-label="Page navigation example" class="d-flex justify-content-center">
            <ul class="pagination">
                <li class="page-item">
                    <a class="page-link" href="#" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                <%for(i=0;i<totalPages;i++){%>
                    <li class="page-item"><a class="page-link" href="/Sales?pages=<%=i+1%>">
                            <%=i+1%>
                        </a></li>
                    <%}%>
                        <li class="page-item">
                            <a class="page-link" href="#" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
            </ul>
        </nav>
       
        </script>

        <script>
            document.getElementById('applyFilters').addEventListener('click', async () => {
                // Get values from date inputs
                
                const filterDateFrom = document.getElementById('startDate').value;
                const filterDateTo = document.getElementById('endDate').value;
                
                // Construct the data object to send
                const formData = {
                    filterDateFrom,
                    filterDateTo
                };

                try {
                    // Send the data using fetch
                    const response = await fetch('/filterdate', {
                        method: 'POST', // Use 'POST' to send data to the server
                        headers: {
                            'Content-Type': 'application/json' // Specify the content type as JSON
                        },
                        body: JSON.stringify(formData) // Convert the data object to a JSON string
                    });

                    let data = await response.json();


                    if (data.success) {
                        window.location.reload()
                        // Check if the response is successful
                    }if(data.dateInvalid){
                        await Swal.fire({
                             icon: "error",
                             title: "Date is Invalid",
                         }); 
                    }
                       
                    } catch (error) {
                        console.error('There was a problem with the fetch operation:', error); // Log any errors to the console
                    }
                });

        </script>
        <script>
            document.getElementById('downloadPdf').addEventListener('click', async () => {
                    
                     const startDate=document.getElementById('startDate').value
                     const endDate=document.getElementById('endDate').value
                     console.log(startDate)
                    console.log(endDate)
                try {
                    const response = await fetch(`/salesReport/download/pdf?startDate=${startDate}&endDate=${endDate}`, {
                        method: 'GET'
                    });
                    const blob = await response.blob();
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = 'salesReport.pdf';
                    document.body.appendChild(a);
                    a.click();
                    window.URL.revokeObjectURL(url);
                    document.body.removeChild(a);
                } catch (error) {
                    console.error('Error downloading PDF:', error);
                }
            });
        </script>
    </body>

    <script>
        let filterBtn = document.getElementById('filterBtn')
        filterBtn.addEventListener('click', async (e) => {
            e.preventDefault();
            let filterOption = document.getElementById('filterOption').value;
            let formData = { filterOption };

            let response = await fetch('/salesReport/filter', {
                method: 'POST',
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(formData)
            });
            let result = await response.json();

            if (result.success) {
                location.reload();
            }
        });
    </script>

    </html>