<%- include('../adminpart/adminhead') %>


<body>
  <style>
    .error {
      color: red;
    }
  </style>
  <script src="https://code.jquery.com/jquery-3.7.1.js" integrity="sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4="
    crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.20.0/jquery.validate.min.js"
    integrity="sha512-WMEKGZ7L5LWgaPeJtw9MBM4i5w5OSBlSjTjCtSnvFJGSVD26gE5+Td12qN5pvWXhuWaWcVwF++F7aqu9cvqP0A=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.20.0/additional-methods.min.js"
    integrity="sha512-TiQST7x/0aMjgVTcep29gi+q5Lk5gVTUPE9XgN0g96rwtjEjLpod4mlBRKWHeBcvGBAEvJBmfDqh2hfMMmg+5A=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>



  <nav class="navbar navbar-dark bg-dark">
    <div class="container-fluid">

    </div>
  </nav>
  <button  type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal">
    Add productOffer
  </button>
  <div class="modal" id="myModal">
    <div class="modal-dialog">
      <div class="modal-content">
        <!-- Modal Header -->
        <div class="modal-header">
          <h4 class="modal-title">Product Details</h4>
          <button type="button" class="close" data-dismiss="modal">&times;</button>
        </div>
        <!-- Modal Body -->
        <form id="productForm">
          <div class="modal-body">
            <div class="form-group">
              <label for="products">Product Name:</label>
              <select name="productId" class="form-control" style="max-width: 450px;">
                <option disabled selected>Select Productname</option>
                <% for(let i=0;i<productDet?.length;i++){ %>
                  <option value="<%=productDet[i]?.productName%>">
                    <%=productDet[i]?.productName%>
                  </option>
                  <% } %>
              </select>
            </div>
            <div class="form-group">
              <label for="startDate">Start Date:</label>
              <input type="date" class="form-control" id="startDate" name="startDate">
            </div>
            <div class="form-group">
              <label for="expiryDate">Expiry Date:</label>
              <input type="date" class="form-control" id="expiryDate" name="expiryDate">
            </div>
            <div class="form-group">
              <label for="offerPercentage">Offer Percentage:</label>
              <input type="number" class="form-control" id="offerPercentage" name="offerPercentage"
                placeholder="Enter offer percentage">
            </div>
          </div>
          <!-- Modal Footer -->
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-primary" id="saveButton">Save</button>
          </div>
        </form>
      </div>
    </div>
  </div>
  <table class="table">
    <thead>
      <tr>
        <th scope="col" class="fw-bold"><span class="lead">Product Name</span></th>
        <th scope="col" class="fw-bold"><span class="lead">Offer Percentage</span></th>
        <th scope="col" class="fw-bold"><span class="lead">Start Date</span></th>
        <th scope="col" class="fw-bold"><span class="lead">Expiry Date</span></th>
        <th scope="col" class="fw-bold"><span class="lead">Action</span></th>
      </tr>
    </thead>
    <tbody>
      <% for (let i=0; i<OfferDet.length;i++){ %>
      <tr>
        <th scope="row">
          <span class="lead"><%=OfferDet[i]?.productName%></span>
        </th>
        <td>
          <span class="lead">%<%=OfferDet[i].offerPercentage%></span>
        </td>
        <td>
          <span class="lead"><%=OfferDet[i].startDate.toDateString()%></span>
        </td>
        <td>
          <span class="lead"><%=OfferDet[i].endDate.toDateString()%></span>
        </td>
        <td>
          <a href="/admin/productOfferedit?id=<%=OfferDet[i]._id%>"><button   type="button" class="btn btn-primary" data-toggle="modal" data-target="#my2Modal<%= i %>">
            Edit
          </button></a>
          <button  id="delete<%i%>" onclick="fndelete('<%=OfferDet[i]._id%>')" type="button" class="btn btn-danger" data-toggle="modal" data-target="#my2Modal<%= i %>">
            Delete
          </button></a>
        </td> 
          
        </tr>
       
        
      <% } %>
    </tbody>
  </table>
  <nav aria-label="Page navigation example" class="d-flex justify-content-center">
    <ul class="pagination">
        <li class="page-item">
            <a class="page-link" href="#" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        <%for(i=0;i<totalPages;i++){%>
            <li class="page-item"><a class="page-link" href="/admin/productOffer?pages=<%=i+1%>">
                    <%=i+1%>
                </a></li>
            <%}%>
                <li class="page-item">
                    <a class="page-link" href="#" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
    </ul>
</nav>
  <script>
    var today = new Date().toISOString().split('T')[0];

document.addEventListener('DOMContentLoaded', function () {
  document.getElementById('startDate').setAttribute('min', today);
});

var startDateInput = document.getElementById('startDate');
var endDateInput = document.getElementById('expiryDate');

startDateInput.addEventListener('change', function () {
  var startDate = startDateInput.value;
  endDateInput.setAttribute('min', startDate);
});

endDateInput.addEventListener('change', function () {
  var endDate = endDateInput.value;
  startDateInput.setAttribute('max', endDate);
});
</script>
  <script>

    $("#productForm").validate({
      rules: {
        productName: "required",
        startDate: "required",
        expiryDate: "required",
        offerPercentage: {
          required: true,
          number: true,
          min: 0,
          max: 90,
        }
      },
      messages: {
        productName: "Please enter a product name",
        startDate: "Please enter a start date",
        expiryDate: "Please enter an expiry date",
        offerPercentage: {
          required: "Please enter an offer percentage",
          number: "Please enter a valid number",
          min: "Offer percentage must be greater than or equal to 0",
          max: "Offer percentage must be less than or equal to 100"
        }
      },
      errorElement: "div",
      errorPlacement: function (error, element) {
        error.addClass("invalid-feedback");
        error.insertAfter(element);
      },
      highlight: function (element, errorClass, validClass) {
        $(element).addClass("is-invalid").removeClass("is-valid");
      },
      unhighlight: function (element, errorClass, validClass) {
        $(element).removeClass("is-invalid").addClass("is-valid");
      },

      submitHandler: async function (form,event) {
        event.preventDefault()
        const formData = $(form).serializeArray();
        const jsonData = {};
        formData.forEach(field => {
          jsonData[field.name] = field.value;
        });

        // Submit data using Fetch API
        let response = await fetch('/admin/productOfferDet', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(jsonData)
        });

        let result = await response.json()
        if (result.success) {
          await Swal.fire({
            icon: "success",
            title: " productOffer added",
          });
          window.location.reload()
        }else{
          await Swal.fire({
                icon: "error",
                title: "Oops...",
                text: "Offer Allredy Exits",
            });
        }
      }
    });


  </script>
      <script>

        async function fndelete(productId) {
               Swal.fire({
                            title: "Are you sure?",
                            icon: "warning",
                            showCancelButton: true,
                            confirmButtonColor: "#3085d6",
                            cancelButtonColor: "#d33",
                            confirmButtonText: "Yes!"
                        }).then(async (result) => {
                            if (result.isConfirmed) {
                                let response = await fetch(`/admin/productDel?id=${productId}`, {
                                    method: 'GET',
                                })
                                let result = await response.json()
                                if (result.del) {
                                    await Swal.fire({
                                        icon: "success",
                                        title: "Product Offer deleted",
                                    });
                                }
                            window.location.reload()
                            }     
                        });
           } 
                
            </script>
  <script>
    $("#productForm2").validate({
      rules: {
        productName: "required",
        startDate: "required",
        expiryDate: "required",
        offerPercentage: {
          required: true,
          number: true,
          min: 0,
          max: 90,
        }
      },
      messages: {
        productName: "Please enter a product name",
        startDate: "Please enter a start date",
        expiryDate: "Please enter an expiry date",
        offerPercentage: {
          required: "Please enter an offer percentage",
          number: "Please enter a valid number",
          min: "Offer percentage must be greater than or equal to 0",
          max: "Offer percentage must be less than or equal to 100"
        }
      },
      errorElement: "div",
      errorPlacement: function (error, element) {
        error.addClass("invalid-feedback");
        error.insertAfter(element);
      },
      highlight: function (element, errorClass, validClass) {
        $(element).addClass("is-invalid").removeClass("is-valid");
      },
      unhighlight: function (element, errorClass, validClass) {
        $(element).removeClass("is-invalid").addClass("is-valid");
      },

      submitHandler: async function (form,event) {
        event.preventDefault()
        const formData = $(form).serializeArray();
        const jsonData = {};
        formData.forEach(field => {
          jsonData[field.name] = field.value;
        });

        // Submit data using Fetch API
        let response = await fetch('/admin/productOfferedit', {
          method: 'PUT',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(jsonData)
        });

        let result = await response.json()
        if (result.success) {
          await Swal.fire({
            icon: "success",
            title: " productOffer eddited",
          });
          window.location.reload()
        }
      }
    });


  </script>
 <script>
  // JavaScript to handle the click event
$(document).on('click', '#unblock', function() {
  $('#editModal').modal('show');
});

 </script>

   </script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.0.0-alpha2/js/bootstrap.min.js"></script>

</body>

</html>